box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon")
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x =`Long`, y=`Lat`, stroke = 2), colour="Verrill", data = n, size =1.5)
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x =`Long`, y=`Lat`, stroke = 2), colour="Verrill", data = n, size =1.5)
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1))
geom_label_repel(aes(x, y, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1) +
geom_label_repel(aes(x, y, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1) +
geom_label_repel(aes(x, y, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50'))
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50'))
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=`Long`, y=`Lat`, col="Verrill", size=1) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50'))
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, col="Verrill", size=1) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50'))
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), colour=col4, data = n, size = 1.5) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), colour=Verrill, data = n, size = 1.5) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), data = n, size = 1.5) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), col="red" data = n, size = 1.5) +
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), col="red", data=n, size = 1.5) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_listb)
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_list)
Gspecies_frame
kable( Gspecies_frame )
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_list)
Gspecies_frame
table( Gspecies_frame )
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_list)
Gspecies_frame
kable( Gspecies_frame )
library( tidyverse )
library( magrittr )
library( knitr )
library( plotly )
V = read_csv( "LIV.csv" )
nrow(V)
names(V)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
echo=FALSE,
dpi=300
)
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_list)
Gspecies_frame
kable( Gspecies_frame )
V_ll <- V[ (!is.na(V$"Lat") & !is.na(V$"Long") ), ]
G_ll <- G[ (!is.na(G$"Lat") & !is.na(G$"Long") ), ]
# Open libraries
library(tidyverse)
library(maps)
library(mapdata)
library(ggplot2)
library(magick)
# Load map
w <- map_data("world")
# Set longitude and latitude limits
longitude = c(-180,180)
latitude = c(-180, 180)
# Set map limits
map_limits = coord_cartesian(xlim = c(-71.5, -73.5), ylim = c(40.5, 41.5))
#Create land
LImap <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
# Use ggplot2 to plot data from 2 dataframes
require(ggplot2)
w =
ggplot() +
LImap +
map_limits +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1, label1=`Catalog Number`)) +
geom_point(data=G_ll, aes(x=`Long`, y=`Lat`, col="Ginsburg", size=1))
ggplotly(w)
V_ll <- V[ (!is.na(V$"Lat") & !is.na(V$"Long") ), ]
G_ll <- G[ (!is.na(G$"Lat") & !is.na(G$"Long") ), ]
# Open libraries
library(tidyverse)
library(maps)
library(mapdata)
library(ggplot2)
library(magick)
# Load map
w <- map_data("world")
# Set longitude and latitude limits
longitude = c(-180,180)
latitude = c(-180, 180)
# Set map limits
map_limits = coord_cartesian(xlim = c(-71.5, -73.5), ylim = c(40.5, 41.5))
#Create land
LImap <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
# Use ggplot2 to plot data from 2 dataframes
require(ggplot2)
w =
ggplot() +
LImap +
map_limits +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1, label1=`CatFullNumber`)) +
geom_point(data=G_ll, aes(x=`Long`, y=`Lat`, col="Ginsburg", size=1))
ggplotly(w)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
echo=FALSE,
dpi=300
)
library( tidyverse )
library( magrittr )
library( knitr )
library( plotly )
V = read_csv( "LIV.csv" )
nrow(V)
names(V)
G = read_csv( "LIG.csv" )
nrow(G)
names(G)
Vllsummary_stats = data.frame(Description=character(), N=numeric())
Vllsummary_stats %<>% rbind(list( "All Records", nrow(V) ), stringsAsFactors=FALSE )
Vllsummary_stats %<>% rbind(list( "Lat and Lon", sum(
!is.na(V$`latitude`) & !is.na(V$`longitude`),
stringsAsFactors=FALSE
) ) )
names(Vllsummary_stats) = c("Description", "N")
kable(Vllsummary_stats)
Gllsummary_stats = data.frame(Description=character(), N=numeric())
Gllsummary_stats %<>% rbind(list( "All Records", nrow(G) ), stringsAsFactors=FALSE )
Gllsummary_stats %<>% rbind(list( "Lat and Lon", sum(
!is.na(G$`latitude`) & !is.na(G$`longitude`),
stringsAsFactors=FALSE
) ) )
names(Gllsummary_stats) = c("Description", "N")
kable(Gllsummary_stats)
Vspecies_list = table(V$"Present Sci name")
Vspecies_frame = data.frame(Taxon=names(Vspecies_list), N=Vspecies_list)
Vspecies_frame
kable( Vspecies_frame )
Gspecies_list = table(G$"Present Sci name")
Gspecies_frame = data.frame(Taxon=names(Gspecies_list), N=Gspecies_list)
Gspecies_frame
kable( Gspecies_frame )
intersect(Gspecies_frame$"Taxon", Vspecies_frame$"Taxon" )
library(ggplot2)
T <- rbind(V,G)
VPC <- ggplot(data = T) +
geom_bar(mapping = aes(x = Phylum, fill = Collector), position = "dodge")
VPC + theme(axis.text.x = element_text(angle = 90, hjust = 1))
Vphyla_list = table(V$"Phylum")
Vphyla_frame = data.frame(Phylum=names(Vphyla_list), N=Vphyla_list, stringsAsFactors = FALSE)
VPhyla = c(table(V$`Phylum`))
VPhyla = Phyla[order(VPhyla, decreasing = TRUE)]
rownames(Vphyla_frame) = NULL
kable(VPhyla)
VPC <- ggplot(data = V) +
geom_bar(mapping = aes(x = Phylum, fill = Class), position = "dodge")
VPC + theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
Gphyla_list = table(G$"Phylum")
Gphyla_frame = data.frame(Phylum=names(Gphyla_list), N=Gphyla_list, stringsAsFactors = FALSE)
GPhyla = c(table(G$`Phylum`))
GPhyla = GPhyla[order(GPhyla, decreasing = TRUE)]
rownames(Gphyla_frame) = NULL
kable(GPhyla)
GPC <- ggplot(data = G) +
geom_bar(mapping = aes(x = Phylum, fill = Class), position = "dodge")
GPC + theme(axis.text.x = element_text(angle = 90, hjust = 1))
intersect(G$"Genus", V$"Genus" )
genus_intersection_frame = data.frame(intersect(G$"Genus", V$"Genus"))
#return observations in Ginsburg, but not in Verrill.
setdiff(G$"Genus", V$"Genus" )
G_only_frame = data.frame(setdiff(G$"Genus", V$"Genus" ))
##return observations in Verrill, but not in Ginsburg
setdiff(V$"Genus", G$"Genus")
V_only_frame = data.frame(setdiff(V$"Genus", G$"Genus"))
V_ll <- V[ (!is.na(V$"Lat") & !is.na(V$"Long") ), ]
G_ll <- G[ (!is.na(G$"Lat") & !is.na(G$"Long") ), ]
# Open libraries
library(tidyverse)
library(maps)
library(mapdata)
library(ggplot2)
library(magick)
# Load map
w <- map_data("world")
# Set longitude and latitude limits
longitude = c(-180,180)
latitude = c(-180, 180)
# Set map limits
map_limits = coord_cartesian(xlim = c(-71.5, -73.5), ylim = c(40.5, 41.5))
#Create land
LImap <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
# Use ggplot2 to plot data from 2 dataframes
require(ggplot2)
w =
ggplot() +
LImap +
map_limits +
geom_point(data=V_ll, aes(x=`Long`, y=`Lat`, col="Verrill", size=1, label1=`CatFullNumber`)) +
geom_point(data=G_ll, aes(x=`Long`, y=`Lat`, col="Ginsburg", size=1))
ggplotly(w)
Glocality_list = table(G$NearestNamedPlace)
Glocality_frame = data.frame(Taxon=names(Glocality_list), N=Glocality_list)
kable( Glocality_frame )
Vlocality_list = table(V$NearestNamedPlace)
Vlocality_frame = data.frame(Taxon=names(Vlocality_list), N=Vlocality_list)
kable( Vlocality_frame)
# Install the relevant libraries - do this one time
library("lubridate")
library("ggplot2")
library("data.table")
library("ggrepel")
library("dplyr")
library("data.table")
library("tidyverse")
q <- ggplot() +
LImap +
map_limits
q + stat_density2d(
aes(x = Long, y = Lat, fill = ..level.., alpha =..level..),
size = 0.2, bins = 30, data = V,
geom = "polygon") +
geom_point(aes(x=V$`Long`, y=V$`Lat`, stroke = 2), col="red", data=n, size = 1.5) +
geom_label_repel(aes(x=`Long`, y=`Lat`, label = label),
data=n,
family = 'N',
size = 3,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
